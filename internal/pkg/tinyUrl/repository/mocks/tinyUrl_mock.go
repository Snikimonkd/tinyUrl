// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/tinyUrl/usecase/tinyUrl.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTinyUrlUsecaseInterface is a mock of TinyUrlUsecaseInterface interface.
type MockTinyUrlUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTinyUrlUsecaseInterfaceMockRecorder
}

// MockTinyUrlUsecaseInterfaceMockRecorder is the mock recorder for MockTinyUrlUsecaseInterface.
type MockTinyUrlUsecaseInterfaceMockRecorder struct {
	mock *MockTinyUrlUsecaseInterface
}

// NewMockTinyUrlUsecaseInterface creates a new mock instance.
func NewMockTinyUrlUsecaseInterface(ctrl *gomock.Controller) *MockTinyUrlUsecaseInterface {
	mock := &MockTinyUrlUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockTinyUrlUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTinyUrlUsecaseInterface) EXPECT() *MockTinyUrlUsecaseInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTinyUrlUsecaseInterface) Create(fullUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", fullUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockTinyUrlUsecaseInterfaceMockRecorder) Create(fullUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTinyUrlUsecaseInterface)(nil).Create), fullUrl)
}

// Get mocks base method.
func (m *MockTinyUrlUsecaseInterface) Get(tinyUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", tinyUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTinyUrlUsecaseInterfaceMockRecorder) Get(tinyUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTinyUrlUsecaseInterface)(nil).Get), tinyUrl)
}

// generate mocks base method.
func (m *MockTinyUrlUsecaseInterface) generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// generate indicates an expected call of generate.
func (mr *MockTinyUrlUsecaseInterfaceMockRecorder) generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "generate", reflect.TypeOf((*MockTinyUrlUsecaseInterface)(nil).generate))
}
